{
	"name": "Live555",
	"homepage": "https://http://www.live555.com/",
	"scm": {
        "type": "archive",
        "url": "http://www.live555.com/liveMedia/public/live555-latest.tar.gz"
    },
    "options": {
        "debug" : {
            "vars": {
                "OPTIONS::DEBUG":"-g -O0"
            }
        },
        "shared" : {
            "vars": {
                "OPTIONS::SHARED":"-with-shared-libraries"
            }
        },
        "openssl" : {
            "dependencies": {
                "latest": {
                    "openssl" : {"min":"1.1"}
                }
            },
            "vars": {
                "OPTIONS::NOOPENSSL":"",
                "OPTIONS::OPENSSL::INCLUDEPATH":"-I${DEPENDENCY::OPENSSL::ROOTPATH}/include",
                "OPTIONS::OPENSSL::LIBPATH":"-L${DEPENDENCY::OPENSSL::ROOTPATH}/lib"
            }
        },
        "no-openssl" : {
            "vars": {
                "OPTIONS::NOOPENSSL":"-no-openssl"
            }
        }
    },
    "recipe": [
        {
            "step":"prepare",
            "cmd":"chmod -R u+rw ${PACKAGE_SRC_PATH}"
        },
        {
            "step":"configure",
            "cmd":[
                "${RSYNC} -a -v --delete-after ${PACKAGE_SRC_PATH}/ ${PACKAGE_BUILD_PATH}"
            ]
        },
        {
            "step":"configure",
            "platforms":"linux-gcc-64",
            "cmd":[
                "bash -c \"\"echo 'PREFIX = ${PACKAGE_PREFIX_PATH}' >> config.linux${OPTIONS::NOOPENSSL}${OPTIONS::SHARED}\"\"",
                "bash -c \"\"echo 'LIBDIR = $(PREFIX)/lib' >> config.linux${OPTIONS::NOOPENSSL}${OPTIONS::SHARED}\"\"",
                "bash -c \"echo 'OPENSSL_INCLUDE = ${OPTIONS::OPENSSL::INCLUDEPATH}' >> config.linux${OPTIONS::NOOPENSSL}${OPTIONS::SHARED}\"",
                "bash -c \"echo 'OPENSSL_LIBPATH = ${OPTIONS::OPENSSL::LIBPATH}' >> config.linux${OPTIONS::NOOPENSSL}${OPTIONS::SHARED}\"",
                "sed -i 's/$(INCLUDES)/$(INCLUDES) $(OPENSSL_INCLUDE)/g' config.linux${OPTIONS::NOOPENSSL}${OPTIONS::SHARED}",
                "sed -i 's/^LINK_OPTS =/LINK_OPTS = $(OPENSSL_LIBPATH)/g' config.linux${OPTIONS::NOOPENSSL}${OPTIONS::SHARED}",
                "sed -i 's/^LIBRARY_LINK_OPTS =/LIBRARY_LINK_OPTS = $(OPENSSL_LIBPATH)/g' config.linux${OPTIONS::NOOPENSSL}${OPTIONS::SHARED}",
                "sed -i 's/^COMPILE_OPTS =/COMPILE_OPTS = -DNO_STD_LIB ${OPTIONS::DEBUG}/g' config.linux${OPTIONS::NOOPENSSL}${OPTIONS::SHARED}",
                "${PACKAGE_BUILD_PATH}/genMakefiles linux${OPTIONS::NOOPENSSL}${OPTIONS::SHARED}"
            ]
        },
        {
            "step":"configure",
            "platforms":"linux-mingw-gcc-32,linux-mingw-gcc-64",
            "cmd":[
                "bash -c \"echo 'CC = ${CROSS_COMPIL_PREFIX}-gcc' >> config.mingw\"",
                "bash -c \"echo 'CXX = ${CROSS_COMPIL_PREFIX}-g++' >> config.mingw\"",
                "bash -c \"echo 'LD = ${CROSS_COMPIL_PREFIX}-ld' >> config.mingw\"",
                "bash -c \"echo 'PREFIX = ${PACKAGE_PREFIX_PATH}' >> config.mingw\"",
                "bash -c \"echo 'LIBDIR = $(PREFIX)/lib' >> config.mingw\"",
                "bash -c \"echo 'OPENSSL_INCLUDE = ${OPTIONS::OPENSSL::INCLUDEPATH}' >> config.mingw\"",
                "bash -c \"echo 'OPENSSL_LIBPATH = ${OPTIONS::OPENSSL::LIBPATH}' >> config.mingw\"",
                "sed -i 's/$(INCLUDES)/$(INCLUDES) $(OPENSSL_INCLUDE)/g' config.mingw",
                "sed -i 's/^LINK_OPTS =/LINK_OPTS = $(OPENSSL_LIBPATH)/g' config.mingw",
                "sed -i 's/^COMPILE_OPTS =/COMPILE_OPTS = -DNO_GETIFADDRS -D_WIN32_WINNT=0x0601/g' config.mingw",
                "sed -i 's/^  inet_ntop(AF_INET,/  inet_ntop(AF_INET, (PVOID)/g' groupsock/NetAddress.cpp",
                "sed -i 's/^  inet_ntop(AF_INET6,/  inet_ntop(AF_INET6, (PVOID)/g' groupsock/NetAddress.cpp",
                "${PACKAGE_BUILD_PATH}/genMakefiles mingw"
            ]
        },
        {
            "step":"configure",
            "platforms":"darwin-clang-64",
            "cmd":[
                "bash -c \"echo 'PREFIX = ${PACKAGE_PREFIX_PATH}' >> ${PACKAGE_BUILD_PATH}/config.macosx${OPTIONS::NOOPENSSL}\"",
                "bash -c \"echo 'LIBDIR = $(PREFIX)/lib' >> ${PACKAGE_BUILD_PATH}/config.macosx${OPTIONS::NOOPENSSL}\"",
                "bash -c \"echo 'OPENSSL_INCLUDE = ${OPTIONS::OPENSSL::INCLUDEPATH}' >> ${PACKAGE_BUILD_PATH}/config.macosx${OPTIONS::NOOPENSSL}\"",
                "bash -c \"echo 'OPENSSL_LIBPATH = ${OPTIONS::OPENSSL::LIBPATH}' >> ${PACKAGE_BUILD_PATH}/config.macosx${OPTIONS::NOOPENSSL}\"",
                "sed -i'.original' -e 's/$(INCLUDES)/$(INCLUDES) $(OPENSSL_INCLUDE)/g' ${PACKAGE_BUILD_PATH}/config.macosx${OPTIONS::NOOPENSSL}",
                "sed -i'.original' -e 's/^LINK_OPTS =/LINK_OPTS = $(OPENSSL_LIBPATH)/g' ${PACKAGE_BUILD_PATH}/config.macosx${OPTIONS::NOOPENSSL}",
                "${PACKAGE_BUILD_PATH}/genMakefiles macosx${OPTIONS::NOOPENSSL}"
            ]
        },
        {
            "step":"build",
            "cmd":"${MAKE}"
        },
        {
            "step":"build",
            "platforms":"linux-mingw-gcc-32,linux-mingw-gcc-64",
            "options":"shared",
            "cmd":"${CROSS_COMPIL_PREFIX}-gcc -shared -o livemedia.dll -Wl,--out-implib,liblivemedia.dll.a -Wl,--whole-archive ${PACKAGE_BUILD_PATH}/liveMedia/libliveMedia.a ${PACKAGE_BUILD_PATH}/UsageEnvironment/libUsageEnvironment.a ${PACKAGE_BUILD_PATH}/BasicUsageEnvironment/libBasicUsageEnvironment.a ${PACKAGE_BUILD_PATH}/groupsock/libgroupsock.a -Wl,--no-whole-archive ${OPTIONS::OPENSSL::LIBPATH} -lstdc++ -lws2_32 -lssl -lcrypto"
        },
        {
            "step":"install",
            "actions":[
                {"cmd":"${MAKE} install PREFIX=${PACKAGE_PREFIX_PATH}"}
            ]
        },
        {
            "step":"install",
            "platforms":"linux-mingw-gcc-32,linux-mingw-gcc-64",
            "options":"shared",
            "actions":[
                {"cmd":[
                    "cp ${PACKAGE_BUILD_PATH}/liblivemedia.dll.a ${PACKAGE_PREFIX_PATH}/lib",
                    "cp ${PACKAGE_BUILD_PATH}/livemedia.dll ${PACKAGE_PREFIX_PATH}/bin"
                    ]
                }
            ]
        }
    ]
}
